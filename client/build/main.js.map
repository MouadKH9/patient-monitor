{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/patient-form/patient-form.component.css","webpack:///./src/app/patient-form/patient-form.component.html","webpack:///./src/app/patient-form/patient-form.component.ts","webpack:///./src/app/patient-list/patient-list-datasource.ts","webpack:///./src/app/patient-list/patient-list.component.css","webpack:///./src/app/patient-list/patient-list.component.html","webpack:///./src/app/patient-list/patient-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 280px;\\n  background-color: #F5F5F5;\\n}\\n\\n.mat-toolbar {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 100;\\n  background-color: #fff;\\n}\\n\\n.sidenav .mat-nav-list ul { width: 100%; }\\n\\n.sidenav .mat-nav-list ul li {\\n  border-bottom: #e6e6e6 solid thin;\\n  list-style: none;\\n  width: 100%;\\n}\\n\\n.sidenav .mat-nav-list ul li a.mat-button {\\n  width: 100%;\\n  color: #7E7E7E;\\n  text-align: left;\\n  position: relative;\\n  transition: 0.2s all linear;\\n}\\n\\n.sidenav .mat-nav-list ul li a.mat-button:hover,\\n.sidenav .mat-nav-list ul li a.mat-button.active {\\n  color: #4285F4;\\n  background-color: #fff;\\n}\\n\\n.sidenav .mat-nav-list ul li a span {\\n  display: inline-block;\\n  vertical-align: middle;\\n  width: 16px;\\n  height: 16px;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  margin-right: 8px;\\n  -webkit-filter: grayscale(100%);\\n          filter: grayscale(100%);\\n  transition: 0.2s all linear;\\n}\\n\\n.sidenav .mat-nav-list ul li a:hover span,\\n.sidenav .mat-nav-list ul li a.active span { -webkit-filter: grayscale(0%); filter: grayscale(0%); }\\n\\n.sidenav .mat-nav-list ul li a samp {\\n  position: absolute;\\n  right: 20px;\\n  top: 45%;\\n  width: 10px;\\n  height: 10px;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n}\\n\\n.sidenav .mat-nav-list ul li ul { display: none; }\\n\\n.sidenav .mat-nav-list ul li ul li { border-bottom: none; }\\n\\n.sidenav .mat-nav-list ul li ul li a { text-indent: 40px; }\\n\\nbutton.mat-mini-fab {\\n  margin-left: auto;\\n  display: inline-block;\\n  vertical-align: middle;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: 100%;\\n  background-color: #fff;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar>\\n      <a href=\\\"#\\\" id=\\\"media-daddy\\\"></a>\\n    </mat-toolbar>\\n    <mat-nav-list>\\n      <ul>\\n        <li>\\n          <a mat-button routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">\\n            <span class=\\\"dash\\\"></span>\\n            Dashboard\\n          </a>\\n        </li>\\n        <li>\\n          <a mat-button (click)=\\\"dropDown('patients')\\\" routerLinkActive=\\\"active\\\">\\n            <span class=\\\"patient\\\"></span>\\n            Patients\\n            <samp class=\\\"downArrow\\\"></samp>\\n          </a>\\n          <ul class=\\\"patients\\\">\\n            <li>\\n              <a mat-button routerLink=\\\"/all-patients\\\" routerLinkActive=\\\"active\\\"><span class=\\\"patientList\\\"></span> All Patients</a>\\n            </li>\\n            <li>\\n              <a mat-button routerLink=\\\"/add-patient\\\" routerLinkActive=\\\"active\\\"><span class=\\\"addPatient\\\"></span> Add Patient</a>\\n            </li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar>\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>patientMonitor</span>\\n      <button mat-mini-fab class=\\\"usr\\\" [matMenuTriggerFor]=\\\"usrMenu\\\"></button>\\n      <mat-menu #usrMenu=\\\"matMenu\\\">\\n        <button mat-menu-item>Settings</button>\\n        <button mat-menu-item>Logout</button>\\n      </mat-menu>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  public dropDown(listName) {\n    $('ul.'+listName).slideToggle('10');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChartsModule } from 'ng4-charts/ng4-charts';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatCardModule, MatMenuModule, MatTableModule, MatPaginatorModule, MatSortModule, MatInputModule, MatDatepickerModule } from '@angular/material';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { PatientFormComponent } from './patient-form/patient-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n  },\n  {\n    path: 'all-patients',\n    component: PatientListComponent,\n  },\n  {\n    path: 'add-patient',\n    component: PatientFormComponent,\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    PatientListComponent,\n    PatientFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ChartsModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    RouterModule.forRoot(routes),\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\\n\\n.mat-card-title { font-size: 18px; }\\n\\n.mat-card-title strong { font-size: 16px; color: #4285F4; }\\n\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"200px\\\">\\n    <mat-grid-tile>\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            Gyrasope <strong>(X, Y)</strong>\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            Temp <strong>(Celsius)</strong>\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            Hear Rate <strong>%</strong>\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            SP02 <strong>%</strong>\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"4\\\" [rowspan]=\\\"2\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            Recent Movement\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\nimport * as Chart from 'chart.js'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \"form {\\n  max-width: 500px;\\n  width: 90%;\\n  margin: 0 auto;\\n  background-color: #fff;\\n  padding: 20px;\\n  box-shadow: 0 2px 5px 0 #919191;\\n}\\n\\n.example-full-width { width: 100%; }\\n\"","module.exports = \"<section id=\\\"innerSec\\\">\\n  <form class=\\\"\\\" action=\\\"index.html\\\" method=\\\"post\\\">\\n    <h1 class=\\\"mat-h1\\\">Add Patient</h1>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"BLE ID\\\" />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"BLE Mac\\\" />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"First Name\\\" />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Last Name\\\" />\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Age\\\" min=\\\"1\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Surpervisor\\\" />\\n    </mat-form-field>\\n\\n    <button mat-raised-button type=\\\"submit\\\">Add</button>\\n\\n  </form>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient-form',\n  templateUrl: './patient-form.component.html',\n  styleUrls: ['./patient-form.component.css']\n})\nexport class PatientFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface PatientListItem {\n  name: string;\n  id: number;\n  age: string;\n  date: string;\n  ble: string;\n  bleid: string;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: PatientListItem[] = [\n  {id: 1, name: 'Milad', age: '24', date: '21-06-2018', ble: 'CC78AB82FE03', bleid: '11'},\n  {id: 2, name: 'Ali', age: '28', date: '12-04-2018', ble: 'CC78AB82F883', bleid: '12'},\n  {id: 3, name: 'Chris', age: '32', date: '24-08-2018', ble: 'CC78AB82FA83', bleid: '13'},\n  {id: 4, name: 'John', age: '30', date: '28-12-2018', ble: 'CC78AB82FE07', bleid: '14'},\n];\n\n/**\n * Data source for the PatientList view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class PatientListDataSource extends DataSource<PatientListItem> {\n  data: PatientListItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<PatientListItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: PatientListItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: PatientListItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        case 'age': return compare(+a.age, +b.age, isAsc);\n        case 'date': return compare(+a.date, +b.date, isAsc);\n        case 'ble': return compare(+a.ble, +b.ble, isAsc);\n        case 'bleid': return compare(+a.bleid, +b.bleid, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"div#titleBar {\\n  display: -ms-flex;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  align-items: center;\\n}\\n\\ndiv#titleBar form { margin-left: auto; }\\n\\ntable { width: 100%; }\\n\"","module.exports = \"<section id=\\\"innerSec\\\">\\n  <div id=\\\"titleBar\\\">\\n    <h1 class=\\\"mat-h1\\\">All Patients</h1>\\n    <form class=\\\"\\\" action=\\\"index.html\\\" method=\\\"post\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"search\\\" placeholder=\\\"Search Patient\\\" />\\n      </mat-form-field>\\n      <button mat-icon-button type=\\\"submit\\\">\\n        <mat-icon aria-label=\\\"search icon\\\">search</mat-icon>\\n      </button>\\n    </form>\\n  </div>\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n      <!-- Id Column -->\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"age\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Age</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.age}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"date\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.date}}</td>\\n      </ng-container>\\n\\n\\n      <ng-container matColumnDef=\\\"ble\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ble Mac</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.ble}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"bleid\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>BleID</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.bleid}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n    <mat-paginator #paginator\\n      [length]=\\\"dataSource.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n    </mat-paginator>\\n  </div>\\n</section>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { PatientListDataSource } from './patient-list-datasource';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.css']\n})\nexport class PatientListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: PatientListDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name', 'age', 'date', 'ble', 'bleid'];\n\n  ngOnInit() {\n    this.dataSource = new PatientListDataSource(this.paginator, this.sort);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}